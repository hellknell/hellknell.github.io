{"version":3,"file":"js/102.de135c3d.js","mappings":"yJAMA,MAAMA,EAAUC,EAAAA,EAAMC,OAAO,CACzBC,QAASC,yBACTC,QAAS,MAMbL,EAAQM,aAAaN,QAAQO,KAAIC,IAC7BA,EAAOC,QAAQ,gBAAkB,iCACjC,IAAIC,EAAQC,KAAKC,MAAMC,aAAaC,QAAQ,iBAAcC,EAE1D,OADAP,EAAOC,QAAQC,MAAQA,GAAOA,MACvBF,CAAM,IACdQ,IACCC,QAAQD,MAAM,kBAAoBA,GAC3BE,QAAQC,OAAOH,MAK1BhB,EAAQM,aAAac,SAASb,KAC1Ba,IACI,IAAIC,EAAMD,EAASE,KAanB,MAZiB,QAAbD,EAAIE,OACJC,EAAAA,EAAMC,OAAO,YAAa,CAAC,GAC3BC,EAAAA,EAAaV,MAAM,CACfW,QAAS,KACTC,YAAa,gBAEjBC,EAAAA,EAAOC,KAAK,WAGG,kBAART,IACPA,EAAMA,EAAMV,KAAKC,MAAMS,GAAOA,GAE3BA,CAAG,IAEdL,IACIC,QAAQc,IAAI,QAASf,GACrB,MAAMI,EAAWJ,EAAMI,SACjBY,EAASZ,EAASY,OAQxB,OAPe,MAAXA,IAEAf,QAAQc,IAAI,kBACZP,EAAAA,EAAMC,OAAO,YAAa,CAAC,GAC3BC,EAAAA,EAAaV,MAAM,CAAEY,YAAa,aAClCC,EAAAA,EAAOC,KAAK,WAETZ,QAAQC,OAAOH,EAAM,IAIpC,K,2PC/BA,MAAMiB,GAAUC,EAAAA,EAAAA,IAAI,IAEdC,IADUD,EAAAA,EAAAA,KAAI,GACIE,EAAAA,IAElBC,GAAaH,EAAAA,EAAAA,IAAI,CACrBI,MAAO,EACPC,QAAS,EACTC,SAAU,KAEZ,IAAIC,GAAUP,EAAAA,EAAAA,KAAI,GAClB,MAAMQ,EAAU,CACd,CACEC,MAAO,OACPC,UAAW,WACXC,IAAK,YAEP,CACEF,MAAO,OACPC,UAAW,cACXC,IAAK,OACJ,CACDF,MAAO,OACPC,UAAW,iBAEb,CACED,MAAO,KACPC,UAAW,QAEb,CACED,MAAO,OACPC,UAAW,YACXC,IAAK,aAEP,CACEF,MAAO,OACPC,UAAW,YAEb,CACED,MAAO,KACPC,UAAW,iBAEb,CACED,MAAO,KACPC,UAAW,OAEb,CACED,MAAO,KACPC,UAAW,OAGb,CACED,MAAO,MACPC,UAAW,QACXC,IAAK,SAEP,CACEF,MAAO,OACPC,UAAW,aAEb,CACED,MAAO,MACPC,UAAW,MACXC,IAAK,OAEP,CACEF,MAAO,OACPC,UAAW,YAKTE,EAAeC,IACdA,IACHA,EAAQ,CACNC,QAAS,EACTR,SAAUH,EAAWY,MAAMT,WAI/BC,EAAQQ,OAAQ,EAChBjD,EAAAA,EAAQkD,IAAI,4BAA6B,CACvCC,OAAQ,CACNH,QAASD,EAAMC,QACfR,SAAUO,EAAMP,YAEjBY,MAAM/B,IACPoB,EAAQQ,OAAQ,EACZ5B,EAAIgC,SACNpB,EAAQgB,MAAQ5B,EAAIC,KAAKgC,KACzBjB,EAAWY,MAAMV,QAAUQ,EAAMC,QACjCX,EAAWY,MAAMX,MAAQjB,EAAIkC,QAAQjB,OAErCZ,EAAAA,EAAaV,MAAM,CAACY,YAAaP,EAAImC,KACvC,GACA,EAGEC,EAAqBC,IACzBrB,EAAWY,MAAMT,SAAWkB,EAAKlB,SACjCM,EAAY,CACVE,QAASU,EAAKnB,QACdC,SAAUkB,EAAKlB,UACf,E,OAGJmB,EAAAA,EAAAA,KAAU,KACRb,EAAY,CACVE,QAAS,EACTR,SAAUH,EAAWY,MAAMT,UAC3B,I,kvBCrIJ,MAAMoB,EAAc,EAEpB,O","sources":["webpack://web/./src/util/request.js","webpack://web/./src/views/main/MyTicketView.vue","webpack://web/./src/views/main/MyTicketView.vue?9a3d"],"sourcesContent":["import axios from 'axios'\r\nimport store from \"@/store\";\r\nimport {notification} from \"ant-design-vue\";\r\nimport router from \"@/router\";\r\n\r\n// 创建可一个新的axios对象\r\nconst request = axios.create({\r\n    baseURL: process.env.VUE_APP_BASEURL,   // 后端的接口地址  ip:port\r\n    timeout: 30000                          // 30s请求超时\r\n})\r\n\r\n// request 拦截器\r\n// 可以自请求发送前对请求做一些处理\r\n// 比如统一加token，对请求参数统一加密\r\nrequest.interceptors.request.use(config => {\r\n    config.headers['Content-Type'] = 'application/json;charset=utf-8';\r\n    let token = JSON.parse(localStorage.getItem('member')) || undefined;\r\n    config.headers.token = token?.token;\r\n    return config\r\n}, error => {\r\n    console.error('request error: ' + error) // for debug\r\n    return Promise.reject(error)\r\n});\r\n\r\n// response 拦截器\r\n// 可以在接口响应后统一处理结果\r\nrequest.interceptors.response.use(\r\n    response => {\r\n        let res = response.data;\r\n        if (res.code === '401') {\r\n            store.commit(\"setMember\", {});\r\n            notification.error({\r\n                message: '错误',\r\n                description: '登录已过期，请重新登录',\r\n            })\r\n            router.push('/login')\r\n        }\r\n        // 兼容服务端返回的字符串数据\r\n        if (typeof res === 'string') {\r\n            res = res ? JSON.parse(res) : res\r\n        }\r\n        return res;\r\n    },\r\n    error => {\r\n        console.log('返回错误：', error);\r\n        const response = error.response;\r\n        const status = response.status;\r\n        if (status === 401) {\r\n            // 判断状态码是401 跳转到登录页\r\n            console.log(\"未登录或登录超时，跳到登录页\");\r\n            store.commit(\"setMember\", {});\r\n            notification.error({ description: \"未登录或登录超时\" });\r\n            router.push('/login');\r\n        }\r\n        return Promise.reject(error);\r\n    }\r\n)\r\n\r\nexport default request","<template>\r\n  <div :size=\"14\" style=\"display: flex;justify-content: flex-start\">\r\n    <a-button type=\"primary\" @click=\"handleQuery()\">刷新</a-button>\r\n  </div>\r\n  <a-table :dataSource=\"tickets\"\r\n           :columns=\"columns\"\r\n           :pagination=\"pagination\"\r\n           @change=\"handleTableChange\"\r\n           :loading=\"loading\">\r\n    <template #bodyCell=\"{ column,record }\">\r\n      <template v-if=\"column.dataIndex==='seatType'\">\r\n          <span v-for=\"item in SEAT_TYPE_ARRAY\" :key=\"item.code\">\r\n          <span v-if=\"item.code === record.seatType\">\r\n            <a-tag color=\"warning\">{{ item.desc }}</a-tag>\r\n          </span>\r\n          </span>\r\n      </template>\r\n    </template>\r\n  </a-table>\r\n</template>\r\n\r\n<script setup>\r\nimport {onMounted, ref} from 'vue';\r\nimport request from \"@/util/request\";\r\nimport {notification} from \"ant-design-vue\";\r\nimport {TrainSeat_TYPE_ARRAY} from \"@/assets/js/enum\";\r\n\r\nconst tickets = ref([])\r\nconst visible = ref(false);\r\nconst SEAT_TYPE_ARRAY = TrainSeat_TYPE_ARRAY\r\n// 分页的三个属性名是固定的\r\nconst pagination = ref({\r\n  total: 0,\r\n  current: 1,\r\n  pageSize: 10\r\n});\r\nlet loading = ref(false);\r\nconst columns = [\r\n  {\r\n    title: '会员id',\r\n    dataIndex: 'memberId',\r\n    key: 'memberId',\r\n  },\r\n  {\r\n    title: '乘客id',\r\n    dataIndex: 'passengerId',\r\n    key: 'pas',\r\n  }, {\r\n    title: '乘客姓名',\r\n    dataIndex: 'passengerName'\r\n  },\r\n  {\r\n    title: '日期',\r\n    dataIndex: 'date'\r\n  },\r\n  {\r\n    title: '车次编号',\r\n    dataIndex: 'trainCode',\r\n    key: 'trainCode',\r\n  },\r\n  {\r\n    title: '车座类型',\r\n    dataIndex: 'seatType'\r\n  },\r\n  {\r\n    title: '厢序',\r\n    dataIndex: 'carriageIndex'\r\n  },\r\n  {\r\n    title: '排号',\r\n    dataIndex: 'row'\r\n  },\r\n  {\r\n    title: '列号',\r\n    dataIndex: 'col'\r\n  },\r\n\r\n  {\r\n    title: '出发站',\r\n    dataIndex: 'start',\r\n    key: 'start',\r\n  },\r\n  {\r\n    title: '出发时间',\r\n    dataIndex: 'startTime'\r\n  },\r\n  {\r\n    title: '到达站',\r\n    dataIndex: 'end',\r\n    key: 'end',\r\n  },\r\n  {\r\n    title: '到达时间',\r\n    dataIndex: 'endTime'\r\n  },\r\n\r\n];\r\n\r\nconst handleQuery = (param) => {\r\n  if (!param) {\r\n    param = {\r\n      pageNum: 1,\r\n      pageSize: pagination.value.pageSize\r\n    };\r\n  }\r\n\r\n  loading.value = true;\r\n  request.get(\"/member/ticket/query-list\", {\r\n    params: {\r\n      pageNum: param.pageNum,\r\n      pageSize: param.pageSize\r\n    }\r\n  }).then((res) => {\r\n    loading.value = false;\r\n    if (res.success) {\r\n      tickets.value = res.data.list;\r\n      pagination.value.current = param.pageNum;\r\n      pagination.value.total = res.content.total;\r\n    } else {\r\n      notification.error({description: res.msg});\r\n    }\r\n  });\r\n};\r\n\r\nconst handleTableChange = (page) => {\r\n  pagination.value.pageSize = page.pageSize;\r\n  handleQuery({\r\n    pageNum: page.current,\r\n    pageSize: page.pageSize\r\n  })\r\n}\r\nPromise\r\nonMounted(() => {\r\n  handleQuery({\r\n    pageNum: 1,\r\n    pageSize: pagination.value.pageSize\r\n  });\r\n});\r\n</script>\r\n","import script from \"./MyTicketView.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./MyTicketView.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__"],"names":["request","axios","create","baseURL","process","timeout","interceptors","use","config","headers","token","JSON","parse","localStorage","getItem","undefined","error","console","Promise","reject","response","res","data","code","store","commit","notification","message","description","router","push","log","status","tickets","ref","SEAT_TYPE_ARRAY","TrainSeat_TYPE_ARRAY","pagination","total","current","pageSize","loading","columns","title","dataIndex","key","handleQuery","param","pageNum","value","get","params","then","success","list","content","msg","handleTableChange","page","onMounted","__exports__"],"sourceRoot":""}